<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-27T21:38:23 IST" name="Loan Dept" finished-at="2024-09-27T21:38:23 IST" duration-ms="100">
    <groups>
      <group name="Smoke">
        <method signature="Day2.newTest()[pri:0, instance:test.Day2@47987356]" name="newTest" class="test.Day2"/>
        <method signature="Day1.SecondTest()[pri:0, instance:test.Day1@f736069]" name="SecondTest" class="test.Day1"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2024-09-27T21:38:23 IST" name="Personal Loan" finished-at="2024-09-27T21:38:23 IST" duration-ms="100">
      <class name="test.Day1">
        <test-method is-config="true" signature="suitFirst()[pri:0, instance:test.Day1@f736069]" started-at="2024-09-27T21:38:23 IST" name="suitFirst" finished-at="2024-09-27T21:38:23 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suitFirst -->
        <test-method signature="Demo()[pri:0, instance:test.Day1@f736069]" started-at="2024-09-27T21:38:23 IST" name="Demo" finished-at="2024-09-27T21:38:23 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method signature="SecondTest()[pri:0, instance:test.Day1@f736069]" started-at="2024-09-27T21:38:23 IST" name="SecondTest" finished-at="2024-09-27T21:38:23 IST" duration-ms="8" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.Day1.SecondTest(Day1.java:30)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SecondTest -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:test.Day1@f736069]" started-at="2024-09-27T21:38:23 IST" name="endTest" finished-at="2024-09-27T21:38:23 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- test.Day1 -->
      <class name="test.Day2">
        <test-method is-config="true" signature="firstTest1()[pri:0, instance:test.Day2@47987356]" started-at="2024-09-27T21:38:23 IST" name="firstTest1" finished-at="2024-09-27T21:38:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstTest1 -->
        <test-method signature="lastTest1()[pri:0, instance:test.Day2@47987356]" started-at="2024-09-27T21:38:23 IST" name="lastTest1" finished-at="2024-09-27T21:38:23 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastTest1 -->
        <test-method signature="newTest()[pri:0, instance:test.Day2@47987356]" started-at="2024-09-27T21:38:23 IST" name="newTest" finished-at="2024-09-27T21:38:23 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newTest -->
        <test-method signature="newTest1()[pri:0, instance:test.Day2@47987356]" started-at="2024-09-27T21:38:23 IST" name="newTest1" finished-at="2024-09-27T21:38:23 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newTest1 -->
        <test-method signature="myTest1(java.lang.String,java.lang.String)[pri:0, instance:test.Day2@47987356]" started-at="2024-09-27T21:38:23 IST" name="myTest1" data-provider="getData" finished-at="2024-09-27T21:38:23 IST" depends-on-methods="test.Day2.newTest, test.Day2.newTest1" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1username]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest1 -->
        <test-method signature="myTest1(java.lang.String,java.lang.String)[pri:0, instance:test.Day2@47987356]" started-at="2024-09-27T21:38:23 IST" name="myTest1" data-provider="getData" finished-at="2024-09-27T21:38:23 IST" depends-on-methods="test.Day2.newTest, test.Day2.newTest1" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2username]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest1 -->
        <test-method signature="myTest1(java.lang.String,java.lang.String)[pri:0, instance:test.Day2@47987356]" started-at="2024-09-27T21:38:23 IST" name="myTest1" data-provider="getData" finished-at="2024-09-27T21:38:23 IST" depends-on-methods="test.Day2.newTest, test.Day2.newTest1" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3username]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest1 -->
        <test-method is-config="true" signature="lastSuite()[pri:0, instance:test.Day2@47987356]" started-at="2024-09-27T21:38:23 IST" name="lastSuite" finished-at="2024-09-27T21:38:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastSuite -->
      </class> <!-- test.Day2 -->
    </test> <!-- Personal Loan -->
  </suite> <!-- Loan Dept -->
</testng-results>
